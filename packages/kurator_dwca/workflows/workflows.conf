workflows {

  dwca_term_values {

    yaml = "dwca_term_values.yaml"

    title = "Darwin Core Archive Field Value Counter"
    documentation = "https://github.com/kurator-org/kurator-validation/wiki/Darwin-Core-Archive-Field-Value-Counter"
    summary = "Given a list of field names (e.g., country|stateProvince), creates reports of the distinct values of those fields and the number of times they occur in a Darwin Core archive found at a given URL."

    instructions = """
        Enter the URL of a valid Darwin Core Archive. This archive will be downloaded
        and processed in the workflow.
        """

    parameters {

      dwca_url.type = "text"
      dwca_url.label = "URL"
      dwca_url.description = "A URL that points to a valid Darwin Core archive"

      fieldlist.type = "text"
      fieldlist.label = "Field list"
      fieldlist.description = "A list of field for which to count distinct values (e.g., 'country|stateProvince')"

    }

    artifacts {

      downloaded_file.description = "the Darwin Core archive file downloaded from the given URL"

      dwca_core_to_tsv_outputfile.description = "the core file of the downloaded Darwin Core Archive as a TXT file"

      basisofrecord_count_file.description = "contains the distinct values for the basisOfRecord field and the number of times the values appeared in the extracted core file."
      dynamicproperties_count_file.description = "contains the distinct values for the dynamicProperties field and the number of times the values appeared in the extracted core file."
      individualcount_count_file.description = "contains the distinct values for the individualCount field and the number of times the values appeared in the extracted core file."
      lifestage_count_file.description = "contains the distinct values for the lifestage field and the number of times the values appeared in the extracted core file."
      eventdate_count_file.description = "contains the distinct values for the eventDate field and the number of times the values appeared in the extracted core file."
      startdayofyear_count_file.description = "contains the distinct values for the startDayOfYear field and the number of times the values appeared in the extracted core file."
      enddayofyear_count_file.description = "contains the distinct values for the endDayOfYear field and the number of times the values appeared in the extracted core file."
      year_count_file.description = "contains the distinct values for the year field and the number of times the values appeared in the extracted core file."
      month_count_file.description = "contains the distinct values for the month field and the number of times the values appeared in the extracted core file."
      day_count_file.description = "contains the distinct values for the day field and the number of times the values appeared in the extracted core file."
      highergeography_count_file.description = "contains the distinct values for the higherGeography field and the number of times the values appeared in the extracted core file."
      continent_count_file.description = "contains the distinct values for the continent field and the number of times the values appeared in the extracted core file."
      islandgroup_count_file.description = "contains the distinct values for the islandGroup field and the number of times the values appeared in the extracted core file."
      island_count_file.description = "contains the distinct values for the island field and the number of times the values appeared in the extracted core file."
      country_count_file.description = "contains the distinct values for the country field and the number of times the values appeared in the extracted core file."
      stateprovince_count_file.description = "contains the distinct values for the stateProvince field and the number of times the values appeared in the extracted core file."
      county_count_file.description = "contains the distinct values for the county field and the number of times the values appeared in the extracted core file."
      municipality_count_file.description = "contains the distinct values for the municipality field and the number of times the values appeared in the extracted core file."
      locality_count_file.description = "contains the distinct values for the locality field and the number of times the values appeared in the extracted core file."
      minimumelevationinmeters_count_file.description = "contains the distinct values for the minimumElevationInMeters field and the number of times the values appeared in the extracted core file."
      maximumelevationinmeters_count_file.description = "contains the distinct values for the maximumElevationInMeters field and the number of times the values appeared in the extracted core file."
      minimumdepthinmeters_count_file.description = "contains the distinct values for the minimumDepthInMeters field and the number of times the values appeared in the extracted core file."
      maximumdepthinmeters_count_file.description = "contains the distinct values for the maximumDepthInMeters field and the number of times the values appeared in the extracted core file."
      decimallatitude_count_file.description = "contains the distinct values for the decimalLatitude_count_file field and the number of times the values appeared in the extracted core file."
      decimallongitude_count_file.description = "contains the distinct values for the decimalLongitude field and the number of times the values appeared in the extracted core file."
      geodeticdatum_count_file.description = "contains the distinct values for the geodeticDatum field and the number of times the values appeared in the extracted core file."
      georeferenceddate_count_file.description = "contains the distinct values for the georeferencedDate field and the number of times the values appeared in the extracted core file."
      scientificname_count_file.description = "contains the distinct values for the scientificName field and the number of times the values appeared in the extracted core file."
      kingdom_count_file.description = "contains the distinct values for the kingdom field and the number of times the values appeared in the extracted core file."
      phylum_count_file.description = "contains the distinct values for the phylum field and the number of times the values appeared in the extracted core file."
      class_count_file.description = "contains the distinct values for the class field and the number of times the values appeared in the extracted core file."
      order_count_file.description = "contains the distinct values for the order field and the number of times the values appeared in the extracted core file."
      family_count_file.description = "contains the distinct values for the family field and the number of times the values appeared in the extracted core file."
      genus_count_file.description = "contains the distinct values for the genus field and the number of times the values appeared in the extracted core file."
      lengthinmm_count_file.description = "contains the distinct values for the lengthinmm field and the number of times the values appeared in the extracted core file."
      massing_count_file.description = "contains the distinct values for the massing field and the number of times the values appeared in the extracted core file."
      lifestage_count_file.description = "contains the distinct values for the lifestage field and the number of times the values appeared in the extracted core file."
      individualcount_count_file.description = "contains the distinct values for the individualCount field and the number of times the values appeared in the extracted core file."
      sex_count_file.description = "contains the distinct values for the sex field and the number of times the values appeared in the extracted core file."
      taxonrank_count_file.description = "contains the distinct values for the taxonRank field and the number of times the values appeared in the extracted core file."

    }

  }

  file_term_values {

    yaml = "file_term_values.yaml"

    title = "CSV File Field Value Counter"
    documentation = "https://github.com/kurator-org/kurator-validation/wiki/CSV-File-Field-Value-Counter"
    summary = "Given a list of field names (e.g., country|stateProvince), creates reports of the distinct values of those fields and the number of times they occur in an uploaded file."

    instructions = """
        Select a tab-delimited or CSV file to upload. This file will be processed in
        the workflow. Select an output format ('csv' or 'txt') for the output file(s).
        """

    parameters {

      inputfile.type = "upload"
      inputfile.label = "Upload file"
      inputfile.description = "Upload a text file to Darwinize"

      fieldlist.type = "text"
      fieldlist.label = "Field list"
      fieldlist.description = "A list of field for which to count distinct values (e.g., 'country|stateProvince')"

      format.type = "select"
      format.label = "Output Format"
      format.description = "Format for the output file"

      format.options = {
        "csv" : "csv",
        "txt" : "txt"
      }

    }

    artifacts {

      downloaded_file.description = "the Darwin Core archive file downloaded from the given URL"

      dwca_core_to_tsv_outputfile.description = "the core file of the downloaded Darwin Core Archive as a TXT file"

      basisofrecord_count_file.description = "contains the distinct values for the basisOfRecord field and the number of times the values appeared in the extracted core file."
      dynamicproperties_count_file.description = "contains the distinct values for the dynamicProperties field and the number of times the values appeared in the extracted core file."
      individualcount_count_file.description = "contains the distinct values for the individualCount field and the number of times the values appeared in the extracted core file."
      lifestage_count_file.description = "contains the distinct values for the lifestage field and the number of times the values appeared in the extracted core file."
      eventdate_count_file.description = "contains the distinct values for the eventDate field and the number of times the values appeared in the extracted core file."
      startdayofyear_count_file.description = "contains the distinct values for the startDayOfYear field and the number of times the values appeared in the extracted core file."
      enddayofyear_count_file.description = "contains the distinct values for the endDayOfYear field and the number of times the values appeared in the extracted core file."
      year_count_file.description = "contains the distinct values for the year field and the number of times the values appeared in the extracted core file."
      month_count_file.description = "contains the distinct values for the month field and the number of times the values appeared in the extracted core file."
      day_count_file.description = "contains the distinct values for the day field and the number of times the values appeared in the extracted core file."
      highergeography_count_file.description = "contains the distinct values for the higherGeography field and the number of times the values appeared in the extracted core file."
      continent_count_file.description = "contains the distinct values for the continent field and the number of times the values appeared in the extracted core file."
      islandgroup_count_file.description = "contains the distinct values for the islandGroup field and the number of times the values appeared in the extracted core file."
      island_count_file.description = "contains the distinct values for the island field and the number of times the values appeared in the extracted core file."
      country_count_file.description = "contains the distinct values for the country field and the number of times the values appeared in the extracted core file."
      stateprovince_count_file.description = "contains the distinct values for the stateProvince field and the number of times the values appeared in the extracted core file."
      county_count_file.description = "contains the distinct values for the county field and the number of times the values appeared in the extracted core file."
      municipality_count_file.description = "contains the distinct values for the municipality field and the number of times the values appeared in the extracted core file."
      locality_count_file.description = "contains the distinct values for the locality field and the number of times the values appeared in the extracted core file."
      minimumelevationinmeters_count_file.description = "contains the distinct values for the minimumElevationInMeters field and the number of times the values appeared in the extracted core file."
      maximumelevationinmeters_count_file.description = "contains the distinct values for the maximumElevationInMeters field and the number of times the values appeared in the extracted core file."
      minimumdepthinmeters_count_file.description = "contains the distinct values for the minimumDepthInMeters field and the number of times the values appeared in the extracted core file."
      maximumdepthinmeters_count_file.description = "contains the distinct values for the maximumDepthInMeters field and the number of times the values appeared in the extracted core file."
      decimallatitude_count_file.description = "contains the distinct values for the decimalLatitude_count_file field and the number of times the values appeared in the extracted core file."
      decimallongitude_count_file.description = "contains the distinct values for the decimalLongitude field and the number of times the values appeared in the extracted core file."
      geodeticdatum_count_file.description = "contains the distinct values for the geodeticDatum field and the number of times the values appeared in the extracted core file."
      georeferenceddate_count_file.description = "contains the distinct values for the georeferencedDate field and the number of times the values appeared in the extracted core file."
      scientificname_count_file.description = "contains the distinct values for the scientificName field and the number of times the values appeared in the extracted core file."
      kingdom_count_file.description = "contains the distinct values for the kingdom field and the number of times the values appeared in the extracted core file."
      phylum_count_file.description = "contains the distinct values for the phylum field and the number of times the values appeared in the extracted core file."
      class_count_file.description = "contains the distinct values for the class field and the number of times the values appeared in the extracted core file."
      order_count_file.description = "contains the distinct values for the order field and the number of times the values appeared in the extracted core file."
      family_count_file.description = "contains the distinct values for the family field and the number of times the values appeared in the extracted core file."
      genus_count_file.description = "contains the distinct values for the genus field and the number of times the values appeared in the extracted core file."
      lengthinmm_count_file.description = "contains the distinct values for the lengthinmm field and the number of times the values appeared in the extracted core file."
      massing_count_file.description = "contains the distinct values for the massing field and the number of times the values appeared in the extracted core file."
      lifestage_count_file.description = "contains the distinct values for the lifestage field and the number of times the values appeared in the extracted core file."
      individualcount_count_file.description = "contains the distinct values for the individualCount field and the number of times the values appeared in the extracted core file."
      sex_count_file.description = "contains the distinct values for the sex field and the number of times the values appeared in the extracted core file."
      taxonrank_count_file.description = "contains the distinct values for the taxonRank field and the number of times the values appeared in the extracted core file."

    }

  }

  dwca_assess_controlled_terms {

    yaml = "dwca_controlled_term_assessor.yaml"

    title = "Darwin Core Archive Controlled Field Assessor"
    documentation = "https://github.com/kurator-org/kurator-validation/wiki/Darwin-Core-Archive-Controlled-Field-Assessor"
    summary = "Creates reports for Darwin Core fields that are supposed to have controlled values. Reports include counts of distinct values and recommendations for those that can be found in the vocabulary files."

    instructions = """
        Enter the URL of a valid Darwin Core Archive. This archive will be downloaded
        and processed in the workflow.
        """

    parameters {

      dwca_url.type = "text"
      dwca_url.label = "URL"
      dwca_url.description = "A URL that points to a Darwin Core archive"

    }

    artifacts {

      taxonomicStatus_vocab_file.description = "contains the lookup file to use for standardizing the taxonomicStatus field."

      license_vocab_file.description = "contains the lookup file to use for standardizing the license field."

      basisOfRecord_vocab_file.description = "contains the lookup file to use for standardizing the basisOfRecord field."

      nomenclaturalCode_vocab_file.description = "contains the lookup file to use for standardizing the nomenclaturalCode field."

      disposition_vocab_file.description = "contains the lookup file to use for standardizing the disposition field."

      identificationVerificationStatus_vocab_file.description = "contains the lookup file to use for standardizing the identificationVerificationStatus field."

      day_vocab_file.description = "contains the lookup file to use for standardizing the day field."

      occurrenceStatus_vocab_file.description = "contains the lookup file to use for standardizing the occurrenceStatus field."

      georeferenceVerificationStatus_vocab_file.description = "contains the lookup file to use for standardizing the georeferenceVerificationStatus field."

      taxonRank_vocab_file.description = "contains the lookup file to use for standardizing the taxonRank field."

      organismScope_vocab_file.description = "contains the lookup file to use for standardizing the organismScope field."

      type_vocab_file.description = "contains the lookup file to use for standardizing the type field."

      establishmentMeans_vocab_file.description = "contains the lookup file to use for standardizing the establishmentMeans field."

      preparations_vocab_file.description = "contains the lookup file to use for standardizing the preparations field."

      reproductiveCondition_vocab_file.description = "contains the lookup file to use for standardizing the reproductiveCondition field."

      identificationQualifier_vocab_file.description = "contains the lookup file to use for standardizing the identificationQualifier field."

      language_vocab_file.description = "contains the lookup file to use for standardizing the language field."

      geodeticDatum_vocab_file.description = "contains the lookup file to use for standardizing the geodeticDatum field."

      sex_vocab_file.description = "contains the lookup file to use for standardizing the sex field."

      lifeStage_vocab_file.description = "contains the lookup file to use for standardizing the lifeStage field."

      nomenclaturalStatus_vocab_file.description = "contains the lookup file to use for standardizing the nomenclaturalStatus field."

      month_vocab_file.description = "contains the lookup file to use for standardizing the month field."

      reproductivecondition_count_file.description = "contains the distinct values for the reproductiveCondition field and the number of times the values appeared in the extracted core file."

      day_count_file.description = "contains the distinct values for the day field and the number of times the values appeared in the extracted core file."

      month_count_file.description = "contains the distinct values for the month field and the number of times the values appeared in the extracted core file."

      geodeticdatum_count_file.description = "contains the distinct values for the geodeticDatum field and the number of times the values appeared in the extracted core file."

      identificationqualifier_recommended_file.description = "a file containing the recommendations to standardize values for the identificationQualifier field."

      preparations_recommended_file.description = "a file containing the recommendations to standardize values for the preparations field."

      reproductivecondition_recommended_file.description = "a file containing the recommendations to standardize values for the reproductiveCondition field."

      taxonomicstatus_recommended_file.description = "a file containing the recommendations to standardize values for the taxonomicStatus field."

      language_recommended_file.description = "a file containing the recommendations to standardize values for the language field."

      sex_recommended_file.description = "a file containing the recommendations to standardize values for the sex field."

      nomenclaturalstatus_recommended_file.description = "a file containing the recommendations to standardize values for the nomenclaturalStatus field."

      license_recommended_file.description = "a file containing the recommendations to standardize values for the license field."

      type_recommended_file.description = "a file containing the recommendations to standardize values for the type field."

      georeferenceverificationstatus_recommended_file.description = "a file containing the recommendations to standardize values for the georeferenceVerificationStatus field."

      nomenclaturalcode_recommended_file.description = "a file containing the recommendations to standardize values for the nomenclaturalCode field."

      geodeticdatum_recommended_file.description = "a file containing the recommendations to standardize values for the geodeticDatum field."

      establishmentmeans_recommended_file.description = "a file containing the recommendations to standardize values for the establishmentMeans field."

      disposition_recommended_file.description = "a file containing the recommendations to standardize values for the disposition field."

      taxonrank_recommended_file.description = "a file containing the recommendations to standardize values for the taxonRank field."

      occurrencestatus_recommended_file.description = "a file containing the recommendations to standardize values for the occurrenceStatus field."

      month_recommended_file.description = "a file containing the recommendations to standardize values for the month field."

      basisofrecord_recommended_file.description = "a file containing the recommendations to standardize values for the basisOfRecord field."

      identificationverificationstatus_recommended_file.description = "a file containing the recommendations to standardize values for the identificationVerificationStatus field."

      organismscope_recommended_file.description = "a file containing the recommendations to standardize values for the organismScope field."

      lifestage_recommended_file.description = "a file containing the recommendations to standardize values for the lifestage field."

      day_recommended_file.description = "a file containing the recommendations to standardize values for the day field."

    }

  }

  file_assess_controlled_terms {

    yaml = "file_controlled_term_assessor.yaml"

    title = "CSV File Controlled Field Assessor"
    documentation = "https://github.com/kurator-org/kurator-validation/wiki/CSV-File-Controlled-Field-Assessor"
    summary = "Creates reports for Darwin Core fields that are supposed to have controlled values. Reports include counts of distinct values and recommendations for those that can be found in the vocabulary files."

    instructions = """
        Select a tab-delimited or CSV file to upload. This file will be processed in
        the workflow. Select an output format ('csv' or 'txt') for the output file(s).
        """

    parameters {

      inputfile.type = "upload"
      inputfile.label = "Upload file"
      inputfile.description = "Upload a text file to assess"

      format.type = "select"
      format.label = "Output Format"
      format.description = "Format for the output file"

      format.options = {
        "csv" : "csv",
        "txt" : "txt"
      }

    }

    artifacts {

      taxonomicStatus_vocab_file.description = "contains the lookup file to use for standardizing the taxonomicStatus field."

      license_vocab_file.description = "contains the lookup file to use for standardizing the license field."

      basisOfRecord_vocab_file.description = "contains the lookup file to use for standardizing the basisOfRecord field."

      nomenclaturalCode_vocab_file.description = "contains the lookup file to use for standardizing the nomenclaturalCode field."

      disposition_vocab_file.description = "contains the lookup file to use for standardizing the disposition field."

      identificationVerificationStatus_vocab_file.description = "contains the lookup file to use for standardizing the identificationVerificationStatus field."

      day_vocab_file.description = "contains the lookup file to use for standardizing the day field."

      occurrenceStatus_vocab_file.description = "contains the lookup file to use for standardizing the occurrenceStatus field."

      georeferenceVerificationStatus_vocab_file.description = "contains the lookup file to use for standardizing the georeferenceVerificationStatus field."

      taxonRank_vocab_file.description = "contains the lookup file to use for standardizing the taxonRank field."

      organismScope_vocab_file.description = "contains the lookup file to use for standardizing the organismScope field."

      type_vocab_file.description = "contains the lookup file to use for standardizing the type field."

      establishmentMeans_vocab_file.description = "contains the lookup file to use for standardizing the establishmentMeans field."

      preparations_vocab_file.description = "contains the lookup file to use for standardizing the preparations field."

      reproductiveCondition_vocab_file.description = "contains the lookup file to use for standardizing the reproductiveCondition field."

      identificationQualifier_vocab_file.description = "contains the lookup file to use for standardizing the identificationQualifier field."

      language_vocab_file.description = "contains the lookup file to use for standardizing the language field."

      geodeticDatum_vocab_file.description = "contains the lookup file to use for standardizing the geodeticDatum field."

      sex_vocab_file.description = "contains the lookup file to use for standardizing the sex field."

      lifeStage_vocab_file.description = "contains the lookup file to use for standardizing the lifeStage field."

      nomenclaturalStatus_vocab_file.description = "contains the lookup file to use for standardizing the nomenclaturalStatus field."

      month_vocab_file.description = "contains the lookup file to use for standardizing the month field."

      reproductivecondition_count_file.description = "contains the distinct values for the reproductiveCondition field and the number of times the values appeared in the extracted core file."

      day_count_file.description = "contains the distinct values for the day field and the number of times the values appeared in the extracted core file."

      month_count_file.description = "contains the distinct values for the month field and the number of times the values appeared in the extracted core file."

      geodeticdatum_count_file.description = "contains the distinct values for the geodeticDatum field and the number of times the values appeared in the extracted core file."

      identificationqualifier_recommended_file.description = "a file containing the recommendations to standardize values for the identificationQualifier field."

      preparations_recommended_file.description = "a file containing the recommendations to standardize values for the preparations field."

      reproductivecondition_recommended_file.description = "a file containing the recommendations to standardize values for the reproductiveCondition field."

      taxonomicstatus_recommended_file.description = "a file containing the recommendations to standardize values for the taxonomicStatus field."

      language_recommended_file.description = "a file containing the recommendations to standardize values for the language field."

      sex_recommended_file.description = "a file containing the recommendations to standardize values for the sex field."

      nomenclaturalstatus_recommended_file.description = "a file containing the recommendations to standardize values for the nomenclaturalStatus field."

      license_recommended_file.description = "a file containing the recommendations to standardize values for the license field."

      type_recommended_file.description = "a file containing the recommendations to standardize values for the type field."

      georeferenceverificationstatus_recommended_file.description = "a file containing the recommendations to standardize values for the georeferenceVerificationStatus field."

      nomenclaturalcode_recommended_file.description = "a file containing the recommendations to standardize values for the nomenclaturalCode field."

      geodeticdatum_recommended_file.description = "a file containing the recommendations to standardize values for the geodeticDatum field."

      establishmentmeans_recommended_file.description = "a file containing the recommendations to standardize values for the establishmentMeans field."

      disposition_recommended_file.description = "a file containing the recommendations to standardize values for the disposition field."

      taxonrank_recommended_file.description = "a file containing the recommendations to standardize values for the taxonRank field."

      occurrencestatus_recommended_file.description = "a file containing the recommendations to standardize values for the occurrenceStatus field."

      month_recommended_file.description = "a file containing the recommendations to standardize values for the month field."

      basisofrecord_recommended_file.description = "a file containing the recommendations to standardize values for the basisOfRecord field."

      identificationverificationstatus_recommended_file.description = "a file containing the recommendations to standardize values for the identificationVerificationStatus field."

      organismscope_recommended_file.description = "a file containing the recommendations to standardize values for the organismScope field."

      lifestage_recommended_file.description = "a file containing the recommendations to standardize values for the lifestage field."

      day_recommended_file.description = "a file containing the recommendations to standardize values for the day field."

    }

  }

  dwca_assess_geography {

    yaml = "dwca_geography_assessor.yaml"

    title = "Darwin Core Archive Geography Assessor"
    documentation = "https://github.com/kurator-org/kurator-validation/wiki/Darwin-Core-Archive-Geography-Assessor"
    summary = "Creates reports for Darwin Core higher geography fields. Reports include counts of distinct values and recommendations for those that can be found in the vocabulary files."

    instructions = """
        Enter the URL of a valid Darwin Core Archive. This archive will be downloaded
        and processed in the workflow.
        """

    parameters {

      dwca_url.type = "text"
      dwca_url.label = "URL"
      dwca_url.description = "A URL that points to a Darwin Core archive"

    }

    artifacts {

      continent_country_countrycode_stateprovince_county_municipality_waterbody_islandgroup_island_count_report_file.description = "the distinct combination of values of the higher geography fields and the number of times they appeared in the extracted core file"
      continent|country|countryCode|stateProvince|county|municipality|waterBody|islandGroup|island_unknown_report_file.description = "file containing the distinct combinations of higher geography not found in the geography lookup file."
      country_count_report_file.description = "the distinct values of the country field and the number of times they appeared in the extracted core file"
      downloaded_file.description = "downloaded copy of the lookup file"
      dwca_core_to_tsv_outputfile.description = " the core file of the downloaded Darwin Core Archive as a TXT file"

    }

  }

  dwca_clean_geography {

    yaml = "dwca_geography_cleaner.yaml"

    title = "Darwin Core Archive Geography Cleaner"
    documentation = "https://github.com/kurator-org/kurator-validation/wiki/Darwin-Core-Archive-Geography-Cleaner"
    summary = "Creates reports for Darwin Core higher geography fields. Reports include counts of distinct values and recommendations for those that can be found in the vocabulary files. Also creates an output file that replaces values of Darwin Core geography fields with standardized values and adds fields to include the original field values."

    instructions = """
        Enter the URL of a valid Darwin Core Archive. This archive will be downloaded
        and processed in the workflow.
        """

    parameters {

      dwca_url.type = "text"
      dwca_url.label = "URL"
      dwca_url.description = "A URL that points to a Darwin Core archive"

    }

    artifacts {

      continent_country_countrycode_stateprovince_county_municipality_waterbody_islandgroup_island_count_report_file.description = "the distinct combination of values of the higher geography fields and the number of times they appeared in the extracted core file"
      continent|country|countryCode|stateProvince|county|municipality|waterBody|islandGroup|island_unknown_report_file.description = "file containing the distinct combinations of higher geography not found in the geography lookup file."
      continent-country-countrycode-stateprovince-county-municipality-waterbody-islandgroup-island_change_report_file.description = "a copy of the input file with higher geography fields replaced by standard values from lookup_geography and with original higher geography values copied to new fields with '_orig' appended to the field names."
      country_count_report_file.description = "the distinct values of the country field and the number of times they appeared in the extracted core file"
      downloaded_file.description = "downloaded copy of the lookup file"
      dwca_core_to_tsv_outputfile.description = "the core file of the downloaded Darwin Core Archive as a TXT file"
      darwinized_header_file.description = "a copy of the input file with field names replaced by standard Darwin Core field names from lookup_darwin_cloud.txt"

    }

  }

  file_clean_geography {

    yaml = "file_geography_cleaner.yaml"

    title = "CSV File Geography Cleaner"
    documentation = "https://github.com/kurator-org/kurator-validation/wiki/CSV-File-Geography-Cleaner"
    summary = "Creates reports for Darwin Core higher geography fields. Reports include counts of distinct values and recommendations for those that can be found in the vocabulary files. Also creates an output file that replaces values of Darwin Core geography fields with standardized values and adds fields to include the original field values."

    instructions = """
        Select a tab-delimited or CSV file to upload. This file will be processed in
        the workflow. Select the format (csv or txt) for the output file.
        """

    parameters {

      inputfile.type = "upload"
      inputfile.label = "Upload file"
      inputfile.description = "Upload a text file to Darwinize"

      outputfile.type = "text"
      outputfile.label = "Output file name"
      outputfile.description = "A file name for the new file with cleaned geography to create"

      format.type = "select"
      format.label = "Output Format"
      format.description = "Format for the output file"

      format.options = {
        "csv" : "csv",
        "txt" : "txt"
      }

    }

    artifacts {

      continent_country_countrycode_stateprovince_county_municipality_waterbody_islandgroup_island_count_report_file.description = "the distinct combination of values of the higher geography fields and the number of times they appeared in the extracted core file"
      continent|country|countryCode|stateProvince|county|municipality|waterBody|islandGroup|island_unknown_report_file.description = "file containing the distinct combinations of higher geography not found in the geography lookup file."
      continent-country-countrycode-stateprovince-county-municipality-waterbody-islandgroup-island_change_report_file.description = "a copy of the input file with higher geography fields replaced by standard values from lookup_geography and with original higher geography values copied to new fields with '_orig' appended to the field names."
      country_count_report_file.description = "the distinct values of the country field and the number of times they appeared in the extracted core file"
      downloaded_file.description = "downloaded copy of the lookup file"
      dwca_core_to_tsv_outputfile.description = "the core file of the downloaded Darwin Core Archive as a TXT file"
      darwinized_header_file.description = "a copy of the input file with field names replaced by standard Darwin Core field names from lookup_darwin_cloud.txt"

    }

  }

  darwinize_workflow {

    yaml = "darwinize_file.yaml"

    title = "CSV File Darwinizer"
    documentation = "https://github.com/kurator-org/kurator-validation/wiki/CSV-File-Darwinizer"
    summary = "Create a file that substitutes standard Darwin Core field names for the fields in an input file."

    instructions = """
        Select a tab-delimited or CSV file to upload. This file will be processed in
        the workflow. Select the format (csv or txt) for the output file. Select
        whether to prepend the namespace (e.g., 'dwc:') to fields that could be
        interpreted as Darwin Core fields.
        """

    parameters {

      inputfile.type = "upload"
      inputfile.label = "Upload file"
      inputfile.description = "Upload a text file to Darwinize"

      format.type = "select"
      format.label = "Output Format"
      format.description = "Format for the output file"

      format.options = {
        "csv" : "csv",
        "txt" : "txt"
      }

      dwcnamespace.type = "select"
      dwcnamespace.label = "Add namespace"
      dwcnamespace.description = "Namespace to prepend to fields"

      dwcnamespace.options = {
        "n" : "no",
        "y" : "yes"
      }
    }

    artifacts {

      downloaded_file.description = "downloaded copy of the Darwin Core field name lookup file"

      darwinized_header_file.description = "a copy of the input file with field names replaced by standard Darwin Core field names from lookup_darwin_cloud.txt"

    }
  }

  vocabulary_maker_workflow {

    yaml = "vocabulary_maker.yaml"

    title = "Vocabulary Maker"
    documentation = "https://github.com/kurator-org/kurator-validation/wiki/Vocabulary-Maker"
    summary = "Create a vocabulary file from the distinct values of a given list of fields in an input file."

    instructions = """
        Select a tab-delimited or CSV file to upload. This file will be processed in
        the workflow. Select the format (csv or txt) for the output file. Select
        whether to prepend the namespace (e.g., 'dwc:') to fields that could be
        interpreted as Darwin Core fields.
        """

    parameters {

      inputfile.type = "upload"
      inputfile.label = "Upload file"
      inputfile.description = "Upload a text file to Darwinize"

      vocabfile.type = "text"
      vocabfile.label = "Vocabulary file name"
      vocabfile.description = "A file name for the vocabulary file to create"

      termlist.type = "text"
      termlist.label = "Fields from input file"
      termlist.description = "A list of fields in the input file to use as the key combination in the vocabulary file (e.g., recordedBy). To use a combination of fields, separate them with '|' (e.g., genus|specificEpithet)."

      key.type = "text"
      key.label = "Field name for vocabulary"
      key.description = "The name to use for the vocabulary key field (e.g., collector)"

    }

    artifacts {

      output_file.label = "The human readable label of this artifact"
      output_file.description = "A description of the contents of this file"
      output_file.type = "text/csv"

    }
  }

  file_aggregator_workflow {

    yaml = "file_aggregator.yaml"

    title = "CSV File Aggregator"
    documentation = "https://github.com/kurator-org/kurator-validation/wiki/CSV-File-Aggregator"
    summary = "Create a file that combines two separate input files with the distinct columns and all records from both."

    instructions = """
        Select a two tab-delimited or CSV files to upload. These file will be processed in
        the workflow. Select the name and format (csv or txt) for the output file.
        """

    parameters {

      inputfile1.type = "upload"
      inputfile1.label = "Upload first file"
      inputfile1.description = "Upload a text file to aggreagate"

      inputfile2.type = "upload"
      inputfile2.label = "Upload second file"
      inputfile2.description = "Upload a text file to aggreagate"

      outputfile.type = "text"
      outputfile.label = "Output file name"
      outputfile.description = "A name for the aggregated file to create"

      format.type = "select"
      format.label = "Output Format"
      format.description = "Format for the output file"

      format.options = {
        "csv" : "csv",
        "txt" : "txt"
      }
    }

    artifacts {

      aggregated_file.description = "contains a union of the file headers and rows from each of the input files"

    }
  }

  file_date_validator {

    yaml = "file_date_validator.yaml"

    title = "CSV File Date Validator"
    documentation = "https://github.com/kurator-org/kurator-validation/wiki/CSV-File-Date-Validator"
    summary = "Performs validation on the event date fields in the input and fills in missing event dates from atomic fields."

    instructions = """
        Select a darwin core occurrence file to upload as input to the workflow. This file will be processed by a series
        of validation tests in the workflow.
        """

    parameters {

      inputfile.type = "upload"
      inputfile.label = "Upload file"
      inputfile.description = "Upload a csv file to validate"

    }

    artifacts {

      downloaded_file.description = "downloaded copy of the Darwin Core field name lookup file"

      darwinized_header_file.description = "a copy of the input file with field names replaced by standard Darwin Core field names from lookup_darwin_cloud.txt"

      dq_report_file.description = "the data quality report json file provided for use as input to another application"

      dq_report_xls_file.description = "the data quality spreadsheet that contains the validation results"

    }

  }

  file_georef_validator {

    yaml = "file_georef_validator.yaml"

    title = "CSV File Georeference Validator"
    documentation = "https://github.com/kurator-org/kurator-validation/wiki/CSV-File-Geoference-Validator"
    summary = "Performs validation of the georeference fields from the input and fills in or transposes missing or inconsistent coordinates using GeoLocate."

    instructions = """
        Select a darwin core occurrence file to upload as input to the workflow. This file will be processed by a series
        of validation tests in the workflow.
        """

    parameters {

      inputfile.type = "upload"
      inputfile.label = "Upload file"
      inputfile.description = "Upload a csv file to validate"

    }

    artifacts {

      downloaded_file.description = "downloaded copy of the Darwin Core field name lookup file"

      darwinized_header_file.description = "a copy of the input file with field names replaced by standard Darwin Core field names from lookup_darwin_cloud.txt"

      dq_report_file.description = "the data quality report json file provided for use as input to another application"

      dq_report_xls_file.description = "the data quality spreadsheet that contains the validation results"

    }

  }
}
