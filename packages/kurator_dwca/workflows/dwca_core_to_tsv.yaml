#####################################################################################
# dwca_core_to_tsv.yaml
#####################################################################################
#
# This workflow:
#    - downloads a Darwin Core Archive from a URL
#    - extracts the core file of the Darwin Core Archive to a tab-separated text file
#
# Example command-line usage:
# kurator -f dwca_core_to_tsv.yaml 
#         -p url=http://ipt.vertnet.org:8080/ipt/archive.do?r=ccber_mammals
#         -p outputfile=../workspace/test_ccber_archive.zip
#         -p dwcafile=../workspace/test_ccber_archive.zip
#         -p tsvfile=../workspace/test_ccber_core.tsv
#         -p archivetype=standard
#
# Requires:
# jython pip install requests
# jython pip install python-dwca-reader
# jython pip install py
#
#####################################################################################
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# __author__ = "John Wieczorek"
# __copyright__ = "Copyright 2016 President and Fellows of Harvard College"
# __version__ = "dwca_core_to_tsv.yaml 2016-04-07T20:28-03:00"

imports:

- classpath:/org/kurator/akka/types.yaml

components:

- id: ReadInput
  type: PythonActor
  properties:
    code: |
        def on_start(options):
            print 'Started ReadInput'
            print 'ReadInput options: %s' % options
            return 'Good job"

- id: Downloader
  type: PythonActor
  properties:
    module: kurator_dwca.downloader
    onData: downloader
    listensTo:
      - !ref ReadInput

- id: DWCAtoTSVWriter
  type: PythonActor
  properties:
    module: kurator_dwca.dwca_core_to_tsv
    onStart: dwca_core_to_tsv
    parameters:
      outputTypeIsInputType: true
    listensTo:
      - !ref Downloader

- id: WriteOutput
  type: PythonActor
  properties:
    code: |
        def on_data(options):
            print 'WriteOutput options: %s' % options
            print 'Finished WriteOutput'
    listensTo:
      - !ref DWCAtoTSVWriter

- id: DWCAtoTSVWorkflow
  type: Workflow
  properties:
    actors:
      - !ref ReadInput
      - !ref Downloader
      - !ref DWCAtoTSVWriter
      - !ref WriteOutput
    parameters:
       url:
         actor: !ref Downloader
         parameter: url
# By naming this parameter 'out', the webapp will create a file automatically using a GUID
# But how do we inform the downstream actor of the file name to process?
       out:
         actor: !ref Downloader
         parameter: outputfile
       dwcafile:
         actor: !ref DWCAtoTSVWriter
         parameter: dwcafile
       tsvfile:
         actor: !ref DWCAtoTSVWriter
         parameter: tsvfile
       archivetype:
         actor: !ref DWCAtoTSVWriter
         parameter: archivetype
       input:
         actor: !ref ReadInput
         parameter: input
       output:
         actor: !ref WriteOutput
         parameter: output
